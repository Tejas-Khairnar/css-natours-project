/*
    Initial reset
*/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*inherite for all elements from body */ }

/* root font size for document to define rem units */
html {
  font-size: 62.5%;
  /* 10px/16px * 100 = 62.5% */ }

/*
    Fonts for overall project
    All ingerited to its child elements
*/
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  /* 1.7 times bigger than predefined line-height property */
  color: #777;
  /* overall text color for project */
  padding: 3rem;
  /* padding does not get inherited like font properties */
  box-sizing: border-box; }

/*
    Header section
*/
.header {
  height: 95vh;
  /* 95% of viewport height */
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /* fits image in its container */
  background-position: top;
  /* preserve top of image, bottom can crop on resize screen */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* top left xy, top right xy, bottom left xy, bottom right xy*/
  position: relative;
  /* reference/origin to logo-box position */ }

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem;
  /* only ctrl height of img width will be take care by browser */ }

.header__text-box {
  /* trick to align child box center to its parent box*/
  position: absolute;
  top: 40%;
  /* 50% for center */
  left: 50%;
  /* in relation with element itself and not with parent */
  transform: translate(-50%, -50%);
  text-align: center;
  /* center inline elements like "<a> inside it"*/ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* hide backpart of element while transform */
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  /* span is inline element like text */
  font-size: 6rem;
  font-weight: 400;
  /* bydefault h1 has higher weight */
  letter-spacing: 3rem;
  /* to apply animation we defined in @keyframes */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* how animation proceeds */
  /*
  animation-delay: 3s; after this animation starts 
  animation-iteration-count: 3;  number of repetation for animation
  */ }

.heading-primary--sub {
  display: block;
  /* span is inline element like text */
  font-size: 2rem;
  font-weight: 700;
  /* bydefault h1 has higher weight */
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
  /* shorthand animation */ }

@keyframes moveInLeft {
  /* beginning state of animation */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* initially left side */ }
  /* in between state of animation */
  80% {
    transform: translateX(1rem);
    /* inbetween goes to right side */ }
  /* end state of animation */
  100% {
    opacity: 1;
    transform: translateX(0);
    /* stays normal position */ } }

@keyframes moveInRight {
  /* beginning state of animation */
  0% {
    opacity: 0;
    transform: translateX(10rem);
    /* initially right side */ }
  /* in between state of animation */
  80% {
    transform: translateX(-1rem);
    /* inbetween goes to left side */ }
  /* end state of animation */
  100% {
    opacity: 1;
    transform: translateX(0);
    /* stays normal position */ } }

/* pseudo class defines state of element */
/* initial state of <a> */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  /* animation for hover, active state of <a> */
  position: relative;
  /* reference for .btn::after */
  font-size: 1.6rem; }

/* on mouse hover on <a> moves up */
.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* x y blur color */ }

/* on mouse click on <a> to oriinal position, in relation with original link */
.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

/* pseudo element defines certain parts of element */
/* add virtual element after element and then style it, new btn behind our btn, trated as its child */
.btn::after {
  content: '';
  /* important, otherwise not see this effects */
  display: inline-block;
  /* important, makes exactly same as original */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* same as original/parent */
  /* make it behind original btn */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
  /* animation for .btn:hover::after */ }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /* increase size of element on x, y */
  opacity: 0;
  /* fading effect */ }

.btn--white::after {
  background-color: #fff; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* name, duration, function, delay */
  animation-fill-mode: backwards;
  /* apply 0% animation properties at first place */ }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }
