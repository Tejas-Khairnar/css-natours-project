.row {
  max-width: $grid-width; /* <=1140 */
  margin: 0 auto; /* center block elements in another block element */

  // mixin for tablet portrait, <= 900px
  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  // apply margin except last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    // mixin for tablet portrait, <= 900px
    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  // clearfix for float left of col
  &::after {
    content: '';
    clear: both;
    display: table;
  }
}

// select all class starting with col-
// ^ => start, * => contains, $ => end
[class^='col-'] {
  float: left;

  &:not(:last-child) {
    margin-right: $gutter-horizontal;

    // mixin for tablet portrait, <= 900px
    @include respond(tab-port) {
      margin-right: 0; // no gutter
      margin-bottom: $gutter-vertical-small;
    }
  }

  // mixin for tablet portrait, <= 900px
  @include respond(tab-port) {
    width: 100% !important; // 1 column
  }
}

/* col 1 of 2 */
.col-1-of-2 {
  width: calc((100% - #{$gutter-horizontal}) / 2);
}

/* col 1 of 3 */
.col-1-of-3 {
  width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
}

/* col 1 of 4 */
.col-1-of-4 {
  width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
}

/* col 2 of 3 */
.col-2-of-3 {
  width: calc(
    2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
  );
}

/* col 2 of 4 */
.col-2-of-4 {
  width: calc(
    2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
  );
}

/* col 3 of 4 */
.col-3-of-4 {
  width: calc(
    3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
  );
}
